{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","newGoods","goods","visibleGoods","sort","g1","g2","ALPABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","prevState","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAiCE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAmBMC,EA3CD,SACLC,EADK,GAGJ,IADCL,EACF,EADEA,SAAUE,EACZ,EADYA,WAENI,EAAY,YAAOD,GAazB,OAXAC,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQT,GACN,KAAKL,EAASe,QACZ,OAAOF,EAAGG,cAAcF,GAC1B,KAAKd,EAASiB,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OACxB,QACE,OAAO,MAINX,EACHI,EAAaQ,UACbR,EAwBaS,CAAkBnB,EACjC,CAAEI,WAAUE,eAEd,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBhB,IAAaL,EAASe,SAAW,YAC9DQ,QAtBiB,WACvBjB,EAAYN,EAASe,UAkBjB,iCAQA,wBACEO,KAAK,SACLD,UAAS,4BAAuBhB,IAAaL,EAASiB,QAAU,YAChEM,QA1Ba,WACnBjB,EAAYN,EAASiB,SAsBjB,4BAQA,wBACEK,KAAK,SACLD,UAAS,6BAAwBd,GAAc,YAC/CgB,QA1Ce,WACrBf,GAAc,SAAAgB,GAAS,OAAKA,MAsCxB,qBAQEnB,GAAYE,EAEV,wBACEe,KAAK,SACLD,UAAU,4BACVE,QAxCS,WACnBjB,EAAYN,EAASI,MACrBI,GAAc,IAmCN,mBAQA,MAIN,6BACE,6BACGC,EAASgB,KAAI,SAAAC,GACZ,OACE,oBACE,UAAQ,OAERL,UAAU,qCAHZ,SAKGK,GAHIA,cCtHrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9d401bab.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return g1.localeCompare(g2);\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n      default:\n        return 0;\n    }\n  });\n\n  return isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const reverseHandler = () => {\n    setIsReversed(prevState => !prevState);\n  };\n\n  const alphabeticSorter = () => {\n    setSortType(SortType.ALPABET);\n  };\n\n  const lengthSorter = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const resetHandler = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  const newGoods = getReorderedGoods(goodsFromServer,\n    { sortType, isReversed });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType !== SortType.ALPABET && 'is-light'}`}\n          onClick={alphabeticSorter}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType !== SortType.LENGTH && 'is-light'}`}\n          onClick={lengthSorter}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${!isReversed && 'is-light'}`}\n          onClick={reverseHandler}\n        >\n          Reverse\n        </button>\n\n        {(sortType || isReversed)\n          ? (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={resetHandler}\n            >\n              Reset\n            </button>\n          )\n          : ''}\n\n      </div>\n\n      <ul>\n        <ul>\n          {newGoods.map(good => {\n            return (\n              <li\n                data-cy=\"Good\"\n                key={good}\n                className=\"box column is-info is-rounded mb-3\"\n              >\n                {good}\n              </li>\n            );\n          })}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}